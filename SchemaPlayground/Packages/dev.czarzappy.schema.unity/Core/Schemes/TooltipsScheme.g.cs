using Schema.Core;
using Schema.Core.Data;
using Schema.Core.Schemes;
using static Schema.Core.Schema;

namespace Schema.Core.Schemes 
{

    /// <summary>
    /// This class was auto-generated by Schema based on the 'Tooltips' data scheme.
    /// Do not modify this file directly. Changes may be overwritten.
    /// </summary>
    public partial class TooltipsScheme : SchemeWrapper<TooltipsEntry>
    {
        public const string SCHEMA_NAME = "Tooltips";
        
     
        public static SchemaResult<TooltipsScheme> Get()
        {
            if (GetScheme(SCHEMA_NAME).Try(out var scheme, out var error))
            {
                return SchemaResult<TooltipsScheme>.Pass(new TooltipsScheme(scheme));
            }
            
            return error.CastError<TooltipsScheme>();
        }
        
        public static SchemaResult<TooltipsEntry> GetEntry(object entryId)
        {
            if (!Get().Try(out var scheme, out var schemeError))
            {
                return schemeError.CastError<TooltipsEntry>();
            }
            
            return scheme.GetEntryById(entryId);
        }

        public TooltipsScheme(DataScheme dataScheme) : base(dataScheme) {}

        protected override TooltipsEntry EntryFactory(DataScheme dataScheme, DataEntry dataEntry) {
            return new TooltipsEntry(dataScheme, dataEntry);
        }
    }

    public partial class TooltipsEntry : EntryWrapper
    {
        public TooltipsEntry(DataScheme dataScheme, DataEntry entry) : base(dataScheme, entry) {}

     
        /// <summary>
        /// Schema's Tooltip messages that appear at the top of the Scheme Editor
        /// </summary>
     
        public string Message => DataEntry.GetDataAsString("Message");
 
    }
}

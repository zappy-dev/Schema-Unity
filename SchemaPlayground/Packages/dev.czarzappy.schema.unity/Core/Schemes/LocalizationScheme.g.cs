using Schema.Core.Data;
using Schema.Core.Schemes;

namespace Schema.Core.Schemes
{
    /// <summary>
    /// This class was auto-generated by Schema based on the 'Localization' data scheme.
    /// Do not modify this file directly. Changes may be overwritten.
    /// </summary>
    public partial class LocalizationScheme : SchemeWrapper<LocalizationEntry>
    {
  public enum Id		{
			INTRO_QUEST_TITLE,
			QUEST_1_DESCRIPTION,
			QUEST_TEST,
			Fancy_Brooch_Description,
			NPC_NAME_1,
		}
		

        public LocalizationScheme(DataScheme dataScheme) : base(dataScheme)
        {
        }

        protected override LocalizationEntry EntryFactory(DataScheme dataScheme, DataEntry dataEntry)
        {
            return new LocalizationEntry(dataScheme, dataEntry);
        }

    }

    public partial class LocalizationEntry : EntryWrapper
    {
        public LocalizationEntry(DataScheme dataScheme, DataEntry entry) : base(dataScheme, entry)
        {
        }

        public string LocID => _dataEntry.GetDataAsString("LocID");
        public string EnUS => _dataEntry.GetDataAsString("en-US");
        /// <summary>
        /// Details about where this localized string appears to help the Localization team.
        /// </summary>
        public string Context => _dataEntry.GetDataAsString("Context");
        public bool ReadyForTranslations => _dataEntry.GetDataAsBool("ReadyForTranslations");
        public string EsES => _dataEntry.GetDataAsString("es-ES");
        public string FrFR => _dataEntry.GetDataAsString("fr-FR");
        public string DeDE => _dataEntry.GetDataAsString("de-DE");
        public string ItIT => _dataEntry.GetDataAsString("it-IT");
        public string JaJP => _dataEntry.GetDataAsString("ja-JP");
        public string ZhCN => _dataEntry.GetDataAsString("zh-CN");
        public string KoKR => _dataEntry.GetDataAsString("ko-KR");
        public string RuRU => _dataEntry.GetDataAsString("ru-RU");
        public string PtBR => _dataEntry.GetDataAsString("pt-BR");
    }
}
